# This workflow will build platform-specific executables when a release is created
# For desktop application distribution

name: Build Release Executables

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Convert icon
        run: |
          python scripts/convert_icon.py

      - name: Build Linux executable
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=icon/logo_pdf.ico --add-data "icon:icon" --name "pdf_downloader" pdf_downloads.py

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf-downloader-linux
          path: dist/pdf_downloader

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Convert icon
        run: |
          python scripts/convert_icon.py

      - name: Build Windows executable
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=icon\logo_pdf.ico --add-data "icon;icon" --name "pdf_downloader" pdf_downloads.py

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf-downloader-windows
          path: dist/pdf_downloader.exe

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Convert icon
        run: |
          python scripts/convert_icon.py

      - name: Build macOS executable
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=icon/logo_pdf.ico --add-data "icon:icon" --name "pdf_downloader" pdf_downloads.py

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf-downloader-macos
          path: dist/pdf_downloader

  upload-release-assets:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Upload Linux to release
        uses: softprops/action-gh-release@v1
        with:
          files: pdf-downloader-linux/pdf_downloader
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows to release
        uses: softprops/action-gh-release@v1
        with:
          files: pdf-downloader-windows/pdf_downloader.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS to release
        uses: softprops/action-gh-release@v1
        with:
          files: pdf-downloader-macos/pdf_downloader
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
